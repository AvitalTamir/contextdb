# ContextDB Configuration File
# This file contains configuration settings for ContextDB
# Copy this file to 'contextdb.conf' and modify as needed

# Log Settings
# The initial size of the append-only log file
log_initial_size = 1MB

# The maximum size the log file can grow to
log_max_size = 1GB

# Cache Settings
# Exponential moving average smoothing factor for access time statistics
cache_stats_alpha = 0.1

# Initial capacity for cache hash tables
cache_initial_capacity = 1000

# Load factor threshold for cache resizing (0.0 to 1.0)
cache_load_factor_threshold = 0.75

# HTTP API Settings
# Port for the HTTP API server
http_port = 8080

# Buffer size for HTTP requests (in bytes)
http_request_buffer_size = 4096

# Buffer size for HTTP responses (in bytes)
http_response_buffer_size = 8192

# Health Check Thresholds
# Memory usage warning threshold (in GB)
health_memory_warning_gb = 1.0

# Memory usage critical threshold (in GB)
health_memory_critical_gb = 2.0

# Error rate warning threshold (percentage)
health_error_rate_warning = 1.0

# Error rate critical threshold (percentage)
health_error_rate_critical = 5.0

# Vector Search Configuration
# Dimensionality of vectors (must match your data)
vector_dimensions = 128

# Default similarity threshold for threshold queries (0.0 to 1.0)
vector_similarity_threshold = 0.5

# HNSW (Hierarchical Navigable Small World) Configuration
# Maximum connections per node in higher layers
hnsw_max_connections = 16

# Maximum connections per node in layer 0 (base layer)
hnsw_max_connections_layer0 = 32

# Size of dynamic candidate list during construction
hnsw_ef_construction = 200

# Level generation factor (1/ln(2) for exponential decay)
hnsw_ml_factor = 0.693147

# Random seed for deterministic HNSW behavior
hnsw_random_seed = 42

# Maximum number of layers in HNSW index
hnsw_max_layers = 16

# Vector Clustering Configuration
# Maximum iterations for k-means clustering
clustering_max_iterations = 100

# Graph Traversal Configuration
# Maximum depth for graph traversal queries (0-255)
graph_max_traversal_depth = 10

# Timeout for graph traversal operations (in milliseconds)
graph_traversal_timeout_ms = 5000

# Maximum queue size for BFS/DFS traversal (prevents memory exhaustion)
graph_max_queue_size = 10000

# Maximum neighbors to process per node (prevents combinatorial explosion)
graph_max_neighbors_per_node = 1000

# Cache size for shortest path queries
graph_path_cache_size = 1000

# Use bidirectional search for shortest paths (true/false)
graph_enable_bidirectional_search = true

# Monitoring and Metrics Configuration
# How often to collect system metrics (in milliseconds)
metrics_collection_interval_ms = 1000

# Window size for rate calculations (number of samples)
metrics_rate_tracker_window_size = 60

# Enable latency histogram collection (true/false)
metrics_histogram_enable = true

# Enable Prometheus metrics export (true/false)
metrics_export_prometheus = true

# Enable JSON metrics export (true/false)
metrics_export_json = true

# Health check execution interval (in milliseconds)
health_check_interval_ms = 5000

# Individual health check timeout (in milliseconds)
health_check_timeout_ms = 1000

# Enable memory usage tracking (true/false)
memory_stats_enable = true

# Enable error rate tracking (true/false)
error_tracking_enable = true

# Persistent Index Configuration
# Enable persistent memory-mapped indexes for instant startup (true/false)
persistent_index_enable = true

# Sync indexes to disk every N operations (0 = manual sync only)
persistent_index_sync_interval = 100

# Automatically rebuild corrupted indexes from log (true/false)
persistent_index_auto_rebuild = true

# Memory alignment for mmap operations (bytes, should be power of 2)
persistent_index_memory_alignment = 16384

# Enable CRC32 checksum validation for data integrity (true/false)
persistent_index_checksum_validation = true

# Automatically cleanup old index files (true/false)
persistent_index_auto_cleanup = true

# Maximum size per index file in MB (helps with memory usage)
persistent_index_max_file_size_mb = 1024

# Enable index compression - future feature (true/false)
persistent_index_compression_enable = true

# Force sync indexes on database shutdown (true/false)
persistent_index_sync_on_shutdown = true

# Snapshot System Configuration
# Create snapshot every N operations (0 = disabled)
snapshot_auto_interval = 0

# Maximum size for snapshot metadata files in MB
snapshot_max_metadata_size_mb = 10

# Enable snapshot compression - future feature (true/false)
snapshot_compression_enable = true

# Keep this many snapshots during cleanup
snapshot_cleanup_keep_count = 10

# Automatically cleanup old snapshots (true/false)
snapshot_cleanup_auto_enable = true

# Use binary format for vector data vs JSON (true/false)
snapshot_binary_format_enable = true

# Enable concurrent snapshot writes - future feature (true/false)
snapshot_concurrent_writes = false

# Verify data integrity during snapshot load (true/false)
snapshot_verify_checksums = true

# S3 Integration Configuration
# Enable S3 integration for cloud backup (true/false)
s3_enable = false

# S3 bucket name for storing snapshots
s3_bucket = ""

# AWS region for S3 operations
s3_region = us-east-1

# S3 prefix for all ContextDB files
s3_prefix = contextdb/

# Upload timeout in milliseconds (5 minutes default)
s3_upload_timeout_ms = 300000

# Download timeout in milliseconds (3 minutes default)
s3_download_timeout_ms = 180000

# Maximum retry attempts for S3 operations
s3_max_retries = 3

# Automatically cleanup old S3 snapshots (true/false)
s3_cleanup_auto_enable = true

# Verify S3 uploads by downloading and comparing checksums (true/false)
s3_verify_uploads = true

# Use multipart upload for files larger than this (MB)
s3_multipart_threshold_mb = 100

# Raft Consensus Configuration (Distributed Operation)
# Enable Raft consensus for distributed operation (true/false)
raft_enable = false

# Current node ID in the cluster (must be unique)
raft_node_id = 1

# Port for Raft consensus communication
raft_port = 8001

# Minimum election timeout (milliseconds) - prevents split elections
raft_election_timeout_min_ms = 150

# Maximum election timeout (milliseconds) - randomized to prevent ties
raft_election_timeout_max_ms = 300

# Heartbeat interval for leader (milliseconds) - keep followers informed
raft_heartbeat_interval_ms = 50

# Network operation timeout (milliseconds) - TCP connection timeouts
raft_network_timeout_ms = 30000

# Batch size for log replication (entries per RPC)
raft_log_replication_batch_size = 100

# Create snapshot after N log entries (for log compaction)
raft_snapshot_threshold = 10000

# Maximum entries per AppendEntries RPC (prevents large messages)
raft_max_append_entries = 50

# Leadership transfer timeout (milliseconds)
raft_leadership_transfer_timeout_ms = 5000

# Enable pre-vote extension to prevent disruptions (true/false)
raft_pre_vote_enable = true

# Enable CRC32 checksums for network messages (true/false)
raft_checksum_enable = true

# Enable compression for large messages - future feature (true/false)
raft_compression_enable = false

# Distributed Cluster Configuration
# How many copies of data to maintain across the cluster
cluster_replication_factor = 3

# Minimum nodes required for read operations (consistency vs availability)
cluster_read_quorum = 2

# Minimum nodes required for write operations (durability vs availability)
cluster_write_quorum = 2

# Automatically join cluster on startup (true/false)
cluster_auto_join = true

# Expected cluster size for bootstrapping (prevents premature startup)
cluster_bootstrap_expect = 3

# Time to detect node failures (milliseconds)
cluster_failure_detection_ms = 10000

# Prevent split-brain scenarios with network partitions (true/false)
cluster_split_brain_protection = true

# Ultra-Fast Compression System Configuration
# Optimized for vector embeddings and binary index data

# Vector quantization scale factor (255.0 = 8-bit quantization)
compression_vector_quantization_scale = 255.0

# Vector quantization offset for zero-point adjustment
compression_vector_quantization_offset = 0.0

# Enable delta encoding for vector IDs (true/false)
compression_enable_delta_encoding = true

# Minimum run length for RLE compression (3-10 recommended)
compression_rle_min_run_length = 3

# Enable checksums for compressed data integrity (true/false)
compression_enable_checksums = true

# Enable parallel compression - future feature (true/false)
compression_parallel_enable = false

# Compression level: 1=fast, 9=best compression (1-3 recommended for speed)
compression_level = 1

# Minimum data size to trigger compression in bytes
compression_min_size_threshold = 1024

# Minimum compression ratio to actually use compression (1.2 = 20% savings)
compression_min_ratio_threshold = 1.2

# Future configuration sections will be added here
# For example:
# vector_dimension = 128
# checkpoint_interval = 5000
# max_recovery_time = 30000 